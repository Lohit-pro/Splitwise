POST /api/expenses - Add a New Expense

Purpose: Allows an authenticated user to add a new expense to a group.
Details:
Requires a JWT token for authentication.
The request body should include the group ID, description, amount, paid_by (user ID), and split type (equal, exact, percentage).
The expense will be recorded in the Expenses table.
Request Body:
json
Copy code
{
  "group_id": 1,
  "description": "Dinner at restaurant",
  "amount": 100.00,
  "paid_by": 2,
  "split_type": "equal", // Options: 'equal', 'exact', 'percentage'
  "splits": [
    { "user_id": 1, "amount": 50 },
    { "user_id": 2, "amount": 50 }
  ] // Only needed if split_type is 'exact' or 'percentage'
}
Response:
On success, return the created expense details.
On failure, return an error message.
GET /api/expenses/
- Get All Expenses for a Group

Purpose: Retrieves all expenses for a specific group that the authenticated user is a member of.
Details:
Requires a JWT token for authentication.
The group ID is provided as a URL parameter.
Request:
No request body, just the group ID in the URL.
Response:
json
Copy code
[
  {
    "id": 1,
    "group_id": 1,
    "description": "Dinner at restaurant",
    "amount": 100.00,
    "paid_by": 2,
    "split_type": "equal",
    "created_at": "2024-09-02T00:00:00.000Z"
  },
  ...
]
PUT /api/expenses/
- Update an Expense

Purpose: Allows an authenticated user to update an existing expense.
Details:
Requires a JWT token for authentication.
The request body may include the new description, amount, paid_by, or split details.
The expense ID is provided as a URL parameter.
Request Body:
json
Copy code
{
  "description": "Updated dinner expense",
  "amount": 120.00,
  "paid_by": 2,
  "split_type": "equal", // Options: 'equal', 'exact', 'percentage'
  "splits": [
    { "user_id": 1, "amount": 60 },
    { "user_id": 2, "amount": 60 }
  ] // Only needed if split_type is 'exact' or 'percentage'
}
Response:
On success, return the updated expense details.
On failure, return an error message.
DELETE /api/expenses/
- Delete an Expense

Purpose: Allows an authenticated user to delete an existing expense.
Details:
Requires a JWT token for authentication.
The expense ID is provided as a URL parameter.
Request:
No request body, just the expense ID in the URL.
Response:
json
Copy code
{
  "message": "Expense deleted successfully"
}